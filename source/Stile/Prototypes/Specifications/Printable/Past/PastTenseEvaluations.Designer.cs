//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Stile.Prototypes.Specifications.Printable.Past {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class PastTenseEvaluations {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PastTenseEvaluations() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Stile.Prototypes.Specifications.Printable.Past.PastTenseEvaluations", typeof(PastTenseEvaluations).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any {0}.
        /// </summary>
        public static string AnyType {
            get {
                return ResourceManager.GetString("AnyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but.
        /// </summary>
        public static string But {
            get {
                return ResourceManager.GetString("But", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but was.
        /// </summary>
        public static string ButWas {
            get {
                return ResourceManager.GetString("ButWas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to neither greater nor less than.
        /// </summary>
        public static string ComparablyEquivalentTo {
            get {
                return ResourceManager.GetString("ComparablyEquivalentTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to either greater or less than.
        /// </summary>
        public static string ComparablyEquivalentToNegated {
            get {
                return ResourceManager.GetString("ComparablyEquivalentToNegated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected.
        /// </summary>
        public static string Expected {
            get {
                return ResourceManager.GetString("Expected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to instrumented by.
        /// </summary>
        public static string InstrumentedBy {
            get {
                return ResourceManager.GetString("InstrumentedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in runtime &lt;.
        /// </summary>
        public static string InTimeLessThan {
            get {
                return ResourceManager.GetString("InTimeLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to not.
        /// </summary>
        public static string Not {
            get {
                return ResourceManager.GetString("Not", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to null.
        /// </summary>
        public static string Null {
            get {
                return ResourceManager.GetString("Null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to that.
        /// </summary>
        public static string That {
            get {
                return ResourceManager.GetString("That", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to timed out.
        /// </summary>
        public static string TimedOut {
            get {
                return ResourceManager.GetString("TimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to was.
        /// </summary>
        public static string Was {
            get {
                return ResourceManager.GetString("Was", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to would be.
        /// </summary>
        public static string WouldBe {
            get {
                return ResourceManager.GetString("WouldBe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to would throw {0}.
        /// </summary>
        public static string WouldThrow {
            get {
                return ResourceManager.GetString("WouldThrow", resourceCulture);
            }
        }
    }
}
